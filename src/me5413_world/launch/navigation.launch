<launch>

  <!-- Connect the robot to a keyboard teleop controller -->
  <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" respawn="true"/>

  <!-- Run the map server -->
  <arg name="map_file" default="$(find me5413_world)/maps/my_map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  
  <!-- Launch the AMCL Localizer -->
  <!-- <include file="$(find jackal_navigation)/launch/include/amcl.launch">
    <param name="use_map_topic" value="true"/>
  </include> -->

  <arg name="use_map_topic" default="false"/>
  <arg name="scan_topic" default="$(eval optenv('JACKAL_LASE  R_TOPIC', 'front/scan'))" />
  <node pkg="amcl" type="amcl" name="amcl">     
    <!-- <remap from="map" to="map"/> -->
    <param name="use_map_topic" value="$(arg use_map_topic)"/>
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_model_type" value="diff"/>
    <param name="odom_alpha5" value="0.1"/>
    <param name="transform_tolerance" value="0.2" />
    <param name="gui_publish_rate" value="10.0"/>
    <param name="save_pose_rate" value="0.5"/>
    <param name="laser_max_beams" value="100"/>    <!--default 720-->
    <param name="laser_min_range" value="-1.0"/>    <!-- default 0.1-->
    <param name="laser_max_range" value="-1.0"/>    <!--default 30.0-->
    <param name="min_particles" value="500"/>
    <!-- default 2000 -->
    <param name="max_particles" value="5000"/>
    <!-- Maximum error between the true distribution and the estimated distribution. -->
    <param name="kld_err" value="0.05"/>            <!--0.05-->
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.5"/>
    <param name="odom_alpha2" value="0.5"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.5"/>
    <param name="odom_alpha4" value="0.5"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.1"/>        <!--0.05-->
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model.    2.0-->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <!-- Translational movement required before performing a filter update.   0.1  -->
    <param name="update_min_d" value="0.1"/>
    <!--Rotational movement required before performing a filter update.       0.314-->
    <param name="update_min_a" value="0.314"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="global_frame_id" value="map"/>
    <!-- Number of filter updates required before resampling. -->
    <param name="resample_interval" value="1"/>
    <!-- Increase tolerance because the computer can get quite busy    default 1.0      0.2-->
    <param name="transform_tolerance" value="1.0"/>
    <!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. -->
    <param name="recovery_alpha_slow" value="0.001"/>
    <!--Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. -->
    <param name="recovery_alpha_fast" value="0.1"/>
    <!-- Initial pose mean -->
    <param name="initial_pose_x" value="0.0" />
    <param name="initial_pose_y" value="0.0" />
    <param name="initial_pose_a" value="0.0" />
    <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.-->
    <!-- <param name="receive_map_topic" value="true"/> -->
    <!--  When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. -->
    <param name="first_map_only" value="false"/>
    <remap from="scan" to="$(arg scan_topic)"/>
 
  </node>




  <!-- Launch Move Base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find me5413_world)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find me5413_world)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    
    <!-- <rosparam file="$(find jackal_navigation)/params/odom_nav_params/local_costmap_params.yaml" command="load" /> -->
    <rosparam file="$(find me5413_world)/params/odom_nav_params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find me5413_world)/params/map_nav_params/global_costmap_params.yaml" command="load" />
    
    <rosparam file="$(find me5413_world)/params/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find me5413_world)/params/move_base_params.yaml" command="load" />

    <rosparam file="$(find me5413_world)/params/prohibition_areas.yaml" command="load" ns="global_costmap/costmap_prohibition_layer" />
    <rosparam file="$(find me5413_world)/params/prohibition_areas.yaml" command="load" ns="local_costmap/costmap_prohibition_layer" />


    
    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    
    <remap from="odom" to="odometry/filtered" />
  </node>
  <!-- Launch Rviz with our settings -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find me5413_world)/rviz/navigation.rviz" output="log" respawn="true"/>

  <node ns="me5413_world" pkg="me5413_world" type="goal_publisher_node" name="goal_publisher_node" output="screen" />

</launch>